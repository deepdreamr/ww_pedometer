buildscript {
    repositories {
        google()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
        mavenCentral()
    }
    dependencies {
        if (rootProject.ext.has("gradle_classpath")) {
            classpath rootProject.ext.gradle_classpath
        } else {
            logger.warn('classpath not found in rootProject')
            classpath 'com.android.tools.build:gradle:8.2.+'
        }
    }
}

apply plugin: 'com.android.application'
android {
    namespace = "com.android.application"
    if (rootProject.ext.has("compileSdkVersion")) {
        rootProject.ext.compileSdkVersion
        rootProject.ext.buildToolsVersion
    } else {
         logger.warn('compileSdkVersion not found in rootProject')
        compileSdkVersion = 34
        buildToolsVersion = "34.0.0"
    }
    defaultConfig {
        applicationId 'ww.pedometer'
        minSdkVersion 34
        targetSdkVersion 34
    }
    signingConfigs {
        release
    }
    flavorDimensions = ["main"]
    productFlavors {
        play {
            dimension "main"
            minSdkVersion 19
            applicationId 'ww.pedometer'
            targetSdk 34
        }
        fdroid {
            dimension "main"
            minSdkVersion 19
            applicationId 'ww.pedometer'
            targetSdk 34
        }
    }
    lintOptions {
        disable 'MissingTranslation'
        disable 'ExtraTranslation'
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
        }
        debug {
            debuggable true
            signingConfig signingConfigs.release
            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    google()
    maven {
        url 'https://maven.google.com/'
        name 'Google'
    }
    mavenCentral()
}

dependencies {
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.github.j4velin.colorpicker:colorpicker:1.20.6'
    implementation 'com.github.j4velin.EazeGraph:EazeGraph:1.0.3'
    implementation 'com.google.android.apps.dashclock:dashclock-api:2.0.0'
    implementation 'com.android.volley:volley:1.2.1'
    implementation 'com.google.android.gms:play-services-base:18.3.0'
    playImplementation 'com.google.android.gms:play-services-fitness:21.1.0'
    playImplementation 'com.google.android.gms:play-services-games:23.1.0'
    playImplementation 'com.google.android.gms:play-services-identity:18.0.1'
}

def props = new Properties()

if (project.file("key.properties").exists()) {
    props.load(new FileInputStream(project.file("key.properties")))
} else {
    logger.warn('Using sample keystore!!')
    props.load(new FileInputStream(project.file("key.properties.sample")))
}


android.signingConfigs.release.storePassword props.keyStorePassword

android.signingConfigs.release.keyAlias props.keyAlias

android.signingConfigs.release.keyPassword props.keyAliasPassword
